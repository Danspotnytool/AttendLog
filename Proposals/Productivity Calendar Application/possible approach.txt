Possible approach:
	We could create an entire calendar application connected to a database via Node JS using: the Express JS framework to serve the HTTP server, Socket IO to keep the connection between the client and the server, and sqlite3 as the database.
	First, the user would visit the website, and then the server would serve an HTML page to the user with a JavaScript function connected to the server via Socket IO. From there, the server would detect if the user is already logged in or not based on an account token on the user's browser LocalStorage. If the user is not yet authorized or logged in, the server will prompt a Login Page. However, if there's a valid account token on the user's browser LocalStorage, the server would send data from the database corresponding to the user's data (E.g. Profile, Informations, Schedules, etc.).
	Second, the user would start interacting with the page, and the server would keep track of it. Every element the user interacts with, the server would respond. If the user added a schedule to a specific date, the server would save that to the database.
	Third, if the user decides to move a schedule to another day, they can click a button that would trigger an algorithm to start calculating possible choices.